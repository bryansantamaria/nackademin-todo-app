{"version":3,"sources":["components/CreateToDo.jsx","components/ToDoItem.jsx","components/ToDoContainer.jsx","App.js","index.js"],"names":["CreateToDo","state","title","onSubmit","e","preventDefault","props","createToDo","setState","onChange","target","name","value","this","TextField","type","id","placeholder","className","Component","ToDoItem","getLineThrough","textDecoration","todo","done","_id","created","lastUpdated","List","ListItem","style","Checkbox","edge","complete","tabIndex","disableRipple","ListItemText","primary","ListItemSecondaryAction","IconButton","aria-label","Button","onClick","update","variant","color","size","delete","ToDoContainer","Typography","component","todos","map","key","App","axios","post","then","res","data","newTodos","filter","console","log","get","Card","CardContent","CardActions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.106b9024.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\nclass CreateToDo extends Component {\n  state = { title: \"\" };\n\n  //Set the state to whatever the user writes in createToDo from app.js\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.createToDo(this.state.title);\n    this.setState({ title: \"\" });\n  };\n\n  //Target the name attribute title and set the state value\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <TextField\n          type=\"text\"\n          name=\"title\"\n          id=\"standard-basic\"\n          value={this.state.title}\n          onChange={this.onChange}\n          placeholder=\"Add to do...\"\n        />\n\n        <input type=\"submit\" value=\"Submit\" className=\"submitBtn\" />\n      </form>\n    );\n  }\n}\n\nexport default CreateToDo;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from \"@material-ui/core\";\n\nclass ToDoItem extends Component {\n  state = {};\n\n  getLineThrough = () => {\n    const { done } = this.props.todo;\n    return {\n      textDecoration: done ? \"line-through\" : \"none\",\n    };\n  };\n\n  render() {\n    const { title, created, lastUpdated, _id } = this.props.todo;\n\n    return (\n      <List>\n        <ListItem className=\"toDoItem\" style={this.getLineThrough()}>\n          <Checkbox\n            edge=\"start\"\n            onChange={() => this.props.complete(_id)}\n            className=\"checkboxes\"\n            tabIndex={-1}\n            disableRipple\n          />\n          <ListItemText primary={title}> </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton edge=\"end\" aria-label=\"comments\">\n              <Button\n                type=\"button\"\n                onClick={() => this.props.update(_id)}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n              >\n                Edit\n              </Button>{\" \"}\n              <Button\n                type=\"button\"\n                onClick={() => this.props.delete(_id)}\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n              >\n                Delete\n              </Button>\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    );\n  }\n}\n\n{\n  /* <FormControlLabel\ncontrol={<Checkbox color=\"primary\" />}\nlabelPlacement=\"start\"\nonChange={() => this.props.complete(_id)}\n/>\n{title}{\" \"}\n<Button\ntype=\"button\"\nonClick={() => this.props.update(_id)}\nvariant=\"contained\"\ncolor=\"primary\"\nsize=\"small\"\n>\nEdit\n</Button>{\" \"}\n<Button\ntype=\"button\"\nonClick={() => this.props.delete(_id)}\nvariant=\"contained\"\ncolor=\"secondary\"\nsize=\"small\"\n>\nDelete\n</Button> */\n}\n\nexport default ToDoItem;\n","import React, { Component } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport { Typography } from \"@material-ui/core\";\n\nclass ToDoContainer extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"toDoContainer\">\n        <Typography variant=\"h4\" component=\"h2\">\n          {\" \"}\n          To do\n        </Typography>\n        <ul className=\"nobull\">\n          {this.props.todos.map((todo) => (\n            <ToDoItem\n              key={todo._id}\n              todo={todo}\n              complete={this.props.complete}\n              delete={this.props.delete}\n              update={this.props.update}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default ToDoContainer;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./stylesheets/styles.css\";\nimport CreateToDo from \"./components/CreateToDo\";\nimport ToDoContainer from \"./components/ToDoContainer\";\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { todos: [] };\n  }\n\n  //Application has rendered on the client side\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:8080/todo\")\n      .then((res) => this.setState({ todos: res.data }));\n  }\n\n  //Body posts title & done, then recieves data from end point and updates state.\n  createToDo = (title) => {\n    axios\n      .post(\"http://localhost:8080/todo/create\", {\n        title: title,\n        done: false,\n      })\n      .then((res) => this.setState({ todos: [...this.state.todos, res.data] }));\n  };\n\n  complete = (id) => {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        if (todo._id === id) {\n          todo.done = !todo.done;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  //Copy current todos array, filter out item being deleted and update state.\n  delete = (id) => {\n    const toDoList = [...this.state.todos];\n    const newTodos = toDoList.filter((todo) => todo._id !== id);\n\n    axios\n      .delete(`http://localhost:8080/todo/delete/${id}`)\n      .then((res) => this.setState({ todos: newTodos }));\n    console.log(\"Deleted\", id);\n  };\n\n  update = (id) => {\n    return console.log(\"Update\", id);\n  };\n\n  render() {\n    console.log(this.state.todos);\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <Card className=\"card-container\">\n              <CardContent>\n                <ToDoContainer\n                  todos={this.state.todos}\n                  complete={this.complete}\n                  delete={this.delete}\n                  update={this.update}\n                />\n              </CardContent>\n              <CardActions>\n                <CreateToDo createToDo={this.createToDo} />\n              </CardActions>\n            </Card>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}