{"version":3,"sources":["components/CreateToDo.jsx","components/ToDoItem.jsx","components/ToDoContainer.jsx","App.js","index.js"],"names":["CreateToDo","state","title","selectedTodo","onSubmit","e","preventDefault","console","log","props","createToDo","update","setState","onChange","target","name","value","this","className","TextField","type","id","placeholder","Button","variant","color","size","Component","ToDoItem","getLineThrough","textDecoration","todo","done","_id","created","lastUpdated","List","ListItem","dense","button","Checkbox","edge","complete","tabIndex","ListItemText","style","primary","onClick","selectTodo","delete","ToDoContainer","Typography","component","todos","map","key","App","axios","post","then","res","data","newTodos","filter","put","found","find","get","Card","CardContent","CardActions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bfe328b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nclass CreateToDo extends Component {\n  state = { title: \"\", selectedTodo: null };\n\n  //Set the state to whatever the user writes in createToDo from app.js\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(this.props.selectedTodo);\n    if (this.props.selectedTodo === null) {\n      this.props.createToDo(this.state.title);\n    } else {\n      this.props.update(this.state.title);\n    }\n    this.setState({ title: \"\", selectedTodo: null });\n  };\n\n  //Target the name attribute title and set the state value\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} className=\"form_container\">\n        <TextField\n          type=\"text\"\n          name=\"title\"\n          id=\"standard-basic\"\n          value={this.state.title}\n          onChange={this.onChange}\n          placeholder=\"Add to do...\"\n        />\n\n        <Button\n          className=\"btn-todoitem submitBtn\"\n          type=\"submit\"\n          value=\"Submit\"\n          variant=\"contained\"\n          color=\"inherit\"\n          size=\"small\"\n        >\n          Submit\n        </Button>\n      </form>\n    );\n  }\n}\n\nexport default CreateToDo;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from \"@material-ui/core\";\n\nclass ToDoItem extends Component {\n  state = {};\n\n  getLineThrough = () => {\n    const { done } = this.props.todo;\n    return {\n      textDecoration: done ? \"line-through\" : \"none\",\n    };\n  };\n\n  render() {\n    const { title, created, lastUpdated, _id } = this.props.todo;\n\n    return (\n      <List>\n        <ListItem className=\"toDoItem\" dense button>\n          <Checkbox\n            edge=\"start\"\n            onChange={() => this.props.complete(_id)}\n            className=\"checkboxes\"\n            tabIndex={-1}\n            color=\"primary\"\n          />\n          <ListItemText\n            style={this.getLineThrough()}\n            primary={title}\n            className=\"listItemText\"\n          ></ListItemText>\n          <Button\n            className=\"btn-todoitem\"\n            type=\"button\"\n            onClick={() => this.props.selectTodo(_id)}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n          >\n            Edit\n          </Button>{\" \"}\n          <Button\n            className=\"btn-todoitem\"\n            type=\"button\"\n            onClick={() => this.props.delete(_id)}\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"small\"\n          >\n            Delete\n          </Button>\n        </ListItem>\n      </List>\n    );\n  }\n}\n\nexport default ToDoItem;\n","import React, { Component } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport { Typography } from \"@material-ui/core\";\n\nclass ToDoContainer extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"toDoContainer\">\n        <Typography variant=\"h4\" component=\"h4\">\n          {\" \"}\n          To do\n        </Typography>\n        <ul className=\"nobull\">\n          {this.props.todos.map((todo) => (\n            <ToDoItem\n              key={todo._id}\n              todo={todo}\n              complete={this.props.complete}\n              delete={this.props.delete}\n              selectTodo={this.props.selectTodo}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default ToDoContainer;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./stylesheets/styles.css\";\nimport CreateToDo from \"./components/CreateToDo\";\nimport ToDoContainer from \"./components/ToDoContainer\";\nimport { Card, CardContent, CardActions } from \"@material-ui/core\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { todos: [], selectedTodo: null };\n  }\n\n  //Application has rendered on the client side\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:8080/todo\")\n      .then((res) => this.setState({ todos: res.data }));\n  }\n\n  //Body posts title & done, then recieves data from end point and updates state.\n  createToDo = (title) => {\n    axios\n      .post(\"http://localhost:8080/todo/create\", {\n        title: title,\n        done: false,\n      })\n      .then((res) => this.setState({ todos: [...this.state.todos, res.data] }));\n  };\n\n  complete = (id) => {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        if (todo._id === id) {\n          todo.done = !todo.done;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  //Copy current todos array, filter out item being deleted and update state.\n  delete = (id) => {\n    const toDoList = [...this.state.todos];\n    const newTodos = toDoList.filter((todo) => todo._id !== id);\n\n    axios\n      .delete(`http://localhost:8080/todo/delete/${id}`)\n      .then((res) => this.setState({ todos: newTodos }));\n    console.log(\"Deleted\", id);\n  };\n\n  selectTodo = (id) => {\n    this.setState({ selectedTodo: id });\n  };\n\n  update = (title) => {\n    axios\n      .put(`http://localhost:8080/todo/update/${this.state.selectedTodo}`, {\n        title: title,\n        done: false,\n      })\n      .then((res) => {\n        const found = this.state.todos.find(\n          (todo) => todo._id === this.state.selectedTodo\n        );\n        console.log(found);\n        this.setState({ todos: [...this.state.todos, found] });\n      });\n\n    return console.log(\"Update\");\n  };\n\n  render() {\n    console.log(this.state.todos);\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <Card className=\"card-container\">\n              <CardContent>\n                <ToDoContainer\n                  todos={this.state.todos}\n                  complete={this.complete}\n                  delete={this.delete}\n                  selectTodo={this.selectTodo}\n                />\n              </CardContent>\n              <CardActions>\n                <CreateToDo\n                  createToDo={this.createToDo}\n                  update={this.update}\n                  selectedTodo={this.state.selectedTodo}\n                />\n              </CardActions>\n            </Card>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}